jobs:
- name: stable-acquire-pool
  serial: true
  plan:
  - in_parallel:
    - get: bionic-stemcell
      trigger: true
    - get: cf-deployment
      trigger: true
    - put: stable-pool
      params: {acquire: true}
    timeout: 4h

- name: deploy-cf
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: stable-pool
        passed:
        - stable-acquire-pool
        trigger: true
      - get: bionic-stemcell
        passed:
        - stable-acquire-pool
      - get: cf-deployment
      - get: cf-deployment-concourse-tasks
      - get: runtime-ci
      - get: relint-envs
  - task: guarantee-no-existing-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/stable/bbl-state
      IGNORE_ERRORS: true
  - file: runtime-ci/tasks/bosh-upload-stemcell/task.yml
    input_mapping:
      stemcell: bionic-stemcell
      bbl-state: relint-envs
    params:
      BBL_STATE_DIR: environments/test/stable/bbl-state
    task: upload-bionic-stemcell
  - task: update-dns-runtime-config
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
      input_mapping:
        bbl-state: relint-envs
      inputs:
      - name: bbl-state
      - name: cf-deployment-concourse-tasks
      params:
        BBL_STATE_DIR: environments/test/stable/bbl-state
      run:
        dir: ""
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          setup_bosh_env_vars
          cat <<EOT > /tmp/add-bionic.yml
          ---
          - type: replace
            path: /addons/name=bosh-dns/include/stemcell/-
            value:
              os: ubuntu-bionic
          EOT
          bosh runtime-config --name=dns > /tmp/dns.yml
          bosh interpolate -o /tmp/add-bionic.yml /tmp/dns.yml > /tmp/updated-dns.yml
          bosh -n update-runtime-config --name=dns /tmp/updated-dns.yml
  - file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: relint-envs
      ops-files: cf-deployment
    params:
      OPS_FILES: |
        operations/use-bionic-stemcell.yml
        operations/use-internal-lookup-for-route-services.yml
        operations/experimental/colocate-smoke-tests-on-cc-worker.yml
    task: deploy-cf
  - in_parallel:
      steps:
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          bbl-state: relint-envs
        params:
          SYSTEM_DOMAIN: cf.bellatrix.env.wg-ard.ci.cloudfoundry.org
          BBL_STATE_DIR: environments/test/stable/bbl-state
          INSTANCE_GROUP_NAME: credhub
          SECURITY_GROUP_NAME: credhub
        task: open-asgs-for-credhub
      - file: cf-deployment-concourse-tasks/open-asgs-for-bosh-instance-group/task.yml
        input_mapping:
          bbl-state: relint-envs
        params:
          SYSTEM_DOMAIN: cf.bellatrix.env.wg-ard.ci.cloudfoundry.org
          BBL_STATE_DIR: environments/test/stable/bbl-state
          INSTANCE_GROUP_NAME: uaa
          SECURITY_GROUP_NAME: uaa
        task: open-asgs-for-uaa
      - file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          bbl-state: relint-envs
        params:
          SYSTEM_DOMAIN: cf.bellatrix.env.wg-ard.ci.cloudfoundry.org
          BBL_STATE_DIR: environments/test/stable/bbl-state
          ENABLED_FEATURE_FLAGS: |
            diego_docker
            task_creation
            service_instance_sharing
        task: enable-docker-and-tasks

- name: run-smoke-tests
  public: true
  serial: true
  plan:
  - in_parallel:
      steps:
      - get: toolsmiths-env
        passed:
        - deploy-cf
        trigger: true
      - get: cf-deployment-concourse-tasks
  - file: cf-deployment-concourse-tasks/run-errand/task.yml
    params:
      ERRAND_NAME: smoke_tests
      INSTANCE: cc-worker/first
    task: bosh-run-errand-smoke-tests

- name: run-cats
  plan:
  - in_parallel:
      steps:
      - get: toolsmiths-env
        passed:
        - run-smoke-tests
        trigger: true
      - get: cf-deployment-concourse-tasks
      - get: cf-acceptance-tests
  - config:
      image_resource:
        source:
          repository: cloudfoundry/cf-deployment-concourse-tasks
        type: docker-image
      inputs:
      - name: cf-deployment-concourse-tasks
      - name: toolsmiths-env
      outputs:
      - name: integration-configs
      params:
        GIT_COMMIT_EMAIL: cf-release-integration@pivotal.io
        GIT_COMMIT_USERNAME: CI Bot
      platform: linux
      run:
        args:
        - -c
        - |
          #!/bin/bash
          source cf-deployment-concourse-tasks/shared-functions
          DOMAIN="$(jq -r '.cf.api_url' toolsmiths-env/metadata | cut -d. -f2-)"
          pushd integration-configs > /dev/null
          git init
          set_git_config
          cat <<EOT > integration-config.json
          {
            "api": "api.${DOMAIN}",
            "admin_user": "admin",
            "admin_password": "",
            "apps_domain": "${DOMAIN}",
            "artifacts_directory": "logs",
            "skip_ssl_validation": true,
            "use_http": true,
            "timeout_scale": 1,
            "include_apps": true,
            "include_backend_compatibility": true,
            "include_capi_no_bridge": true,
            "include_container_networking": true,
            "include_detect": true,
            "include_docker": true,
            "include_internet_dependent": true,
            "include_route_services": true,
            "include_routing": true,
            "include_security_groups": true,
            "include_service_instance_sharing": true,
            "include_services": true,
            "include_ssh": true,
            "include_sso": true,
            "include_tasks": true,
            "include_tcp_routing": true,
            "include_v3": true,
            "include_zipkin": true,
            "credhub_client": "credhub_admin_client",
            "credhub_secret": "",
            "credhub_mode": "assisted"
          }
          EOT
          git add .
          git commit -m "Create integration config"
        path: bash
    task: create-integration-config
  - file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
    params:
      CATS_INTEGRATION_CONFIG_FILE: integration-config.json
    task: update-integration-configs
  - file: cf-deployment-concourse-tasks/run-cats/task.yml
    input_mapping:
      integration-config: updated-integration-configs
    params:
      CONFIG_FILE_PATH: integration-config.json
    task: run-cats
  public: true
  serial: true

- name: stable-delete-deployment
  serial: true
  public: true
  plan:
  - timeout: 4h
    do:
    - get: stable-pool
      trigger: true
      passed:
      - run-cats
    - in_parallel:
      - get: cf-deployment-concourse-tasks
      - get: relint-envs
    - task: delete-deployment-cf
      file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/bellatrix/bbl-state
        IGNORE_ERRORS: true
    - task: run-bosh-cleanup
      file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/bellatrix/bbl-state
    - put: stable-pool
      params: {release: windows-pool}

- name: stable-release-pool-manual
  plan:
  - get: windows-pool
  ensure:
    try:
      put: windows-pool
      params: {release: windows-pool}

resources:
- icon: github
  name: cf-acceptance-tests
  source:
    branch: release-candidate
    private_key: ((cf_acceptance_tests_readwrite_deploy_key.private_key))
    uri: git@github.com:cloudfoundry/cf-acceptance-tests.git
  type: git

- icon: github
  name: cf-deployment
  source:
    branch: release-candidate
    private_key: ((cf_deployment_readwrite_deploy_key.private_key))
    uri: git@github.com:cloudfoundry/cf-deployment.git
  type: git

- icon: github
  name: cf-deployment-concourse-tasks
  source:
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
  type: git

- icon: dna
  name: bionic-stemcell
  source:
    name: bosh-google-kvm-ubuntu-bionic-go_agent
  type: bosh-io-stemcell

- icon: github
  name: runtime-ci
  source:
    uri: https://github.com/cloudfoundry/runtime-ci.git
  type: git

- name: stable-pool
  type: pool
  icon: pool
  source:
    uri: git@github.com:cloudfoundry/relint-ci-pools
    branch: main
    pool: cf-deployment/stable
    private_key: ((relint_ci_pools_readwrite_deploy_key.private_key))
